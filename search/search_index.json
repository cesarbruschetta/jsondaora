{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dataclassesjson Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassesjson Source Code : https://github.com/dutradda/dataclassesjson Key Features Full compatibility with all functions of dataclasses module Optional input typecasting Direct json serialization with orjson (don't convert to dict before serialization) Supports custom serialization Requirements Python 3.7+ orjson for json serialization Instalation $ pip install dataclassesjson[orjson] Basic example from dataclasses import dataclass from dataclassesjson import asdataclass , asjson @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music jsondict = dict ( name = b 'John' , age = '40' , music = dict ( name = 'Imagine' )) person = asdataclass ( jsondict , Person ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}' Example for disable typecasting from dataclassesjson import asdict , dataclass @dataclass class Music : __cast_input__ = None name : str @dataclass class Person : __cast_input__ = None name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = b 'Imagine' )) # if we use the 'asjson' function will raise error for invalid bytes type print ( asdict ( person )) { 'name':b'John', 'age':'40', 'music':{ 'name':b'Imagine' } } Example for choose fields to typecasting from dataclassesjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __cast_input__ = ( 'name' ,) name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' )) print ( asjson ( person )) '{\"name\":\"John\",\"age\":\"40\",\"music\":{\"name\":\"Imagine\"}}' Example for omit output fields from dataclassesjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __omit_output__ = ( 'music' ,) name : str age : int music : Music person = Person ( 'John' , age = 40 , music = dict ( name = 'Imagine' )) print ( person ) print ( asjson ( person )) Person( 'John', age=40, music=Music(name='Imagine') ) '{\"name\":\"John\",\"age\":40}'","title":"dataclassesjson"},{"location":"#dataclassesjson","text":"Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassesjson Source Code : https://github.com/dutradda/dataclassesjson","title":"dataclassesjson"},{"location":"#key-features","text":"Full compatibility with all functions of dataclasses module Optional input typecasting Direct json serialization with orjson (don't convert to dict before serialization) Supports custom serialization","title":"Key Features"},{"location":"#requirements","text":"Python 3.7+ orjson for json serialization","title":"Requirements"},{"location":"#instalation","text":"$ pip install dataclassesjson[orjson]","title":"Instalation"},{"location":"#basic-example","text":"from dataclasses import dataclass from dataclassesjson import asdataclass , asjson @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music jsondict = dict ( name = b 'John' , age = '40' , music = dict ( name = 'Imagine' )) person = asdataclass ( jsondict , Person ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Basic example"},{"location":"#example-for-disable-typecasting","text":"from dataclassesjson import asdict , dataclass @dataclass class Music : __cast_input__ = None name : str @dataclass class Person : __cast_input__ = None name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = b 'Imagine' )) # if we use the 'asjson' function will raise error for invalid bytes type print ( asdict ( person )) { 'name':b'John', 'age':'40', 'music':{ 'name':b'Imagine' } }","title":"Example for disable typecasting"},{"location":"#example-for-choose-fields-to-typecasting","text":"from dataclassesjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __cast_input__ = ( 'name' ,) name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' )) print ( asjson ( person )) '{\"name\":\"John\",\"age\":\"40\",\"music\":{\"name\":\"Imagine\"}}'","title":"Example for choose fields to typecasting"},{"location":"#example-for-omit-output-fields","text":"from dataclassesjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __omit_output__ = ( 'music' ,) name : str age : int music : Music person = Person ( 'John' , age = 40 , music = dict ( name = 'Imagine' )) print ( person ) print ( asjson ( person )) Person( 'John', age=40, music=Music(name='Imagine') ) '{\"name\":\"John\",\"age\":40}'","title":"Example for omit output fields"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"features/","text":"dataclassesjson features dataclassesjson gives you the following: Same interface as dataclasses module, plus extensions","title":"Features"},{"location":"features/#dataclassesjson-features","text":"dataclassesjson gives you the following:","title":"dataclassesjson features"},{"location":"features/#same-interface-as-dataclasses-module-plus-extensions","text":"","title":"Same interface as dataclasses module, plus extensions"},{"location":"json/","text":"JavaScript Object Notation Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp JSON Schema Official Documentation: - https://json-schema.org","title":"Json intro"},{"location":"json/#javascript-object-notation","text":"Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp","title":"JavaScript Object Notation"},{"location":"json/#json-schema","text":"Official Documentation: - https://json-schema.org","title":"JSON Schema"},{"location":"python-dataclass/","text":"Python 3.7 dataclasses module Official Documentation: - https://docs.python.org/3/library/dataclasses.html Benchmark Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Python dataclass intro"},{"location":"python-dataclass/#python-37-dataclasses-module","text":"Official Documentation: - https://docs.python.org/3/library/dataclasses.html","title":"Python 3.7 dataclasses module"},{"location":"python-dataclass/#benchmark","text":"Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Benchmark"},{"location":"tutorial/custom-data-types/","text":"","title":"Custom Data Types"},{"location":"tutorial/intro/","text":"Tutorial - User Guide - Intro Getting Started Installs $ pip install dataclassesjson[orjson] Starts coding from dataclasses import dataclass from dataclassesjson import asdataclass , asjson @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music jsondict = dict ( name = b 'John' , age = '40' , music = dict ( name = 'Imagine' )) person = asdataclass ( jsondict , Person ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Introduciton"},{"location":"tutorial/intro/#tutorial-user-guide-intro","text":"","title":"Tutorial - User Guide - Intro"},{"location":"tutorial/intro/#getting-started","text":"","title":"Getting Started"},{"location":"tutorial/intro/#installs","text":"$ pip install dataclassesjson[orjson]","title":"Installs"},{"location":"tutorial/intro/#starts-coding","text":"from dataclasses import dataclass from dataclassesjson import asdataclass , asjson @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music jsondict = dict ( name = b 'John' , age = '40' , music = dict ( name = 'Imagine' )) person = asdataclass ( jsondict , Person ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Starts coding"}]}