{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dataclassjson Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassjson Source Code : https://github.com/dutradda/dataclassjson Key Features Full compatibility with all functions of dataclasses module Optional input typecasting Direct json serialization with orjson (don't convert to dict before serialization) Supports custom serialization Requirements Python 3.7+ orjson for json serialization Instalation $ pip install dataclassjson[orjson] Basic example from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}' Example for disable typecasting from dataclassjson import asdict , dataclass @dataclass class Music : __cast_input__ = None name : str @dataclass class Person : __cast_input__ = None name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = b 'Imagine' ) ) # if we use the 'asjson' function will raise error for invalid bytes type print ( asdict ( person )) { 'name':b'John', 'age':'40', 'music':{ 'name':b'Imagine' } } Example for choose fields to typecasting from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __cast_input__ = ( 'name' ,) name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":\"40\",\"music\":{\"name\":\"Imagine\"}}' Example for omit output fields from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __omit_output__ = ( 'music' ,) name : str age : int music : Music person = Person ( 'John' , age = 40 , music = dict ( name = 'Imagine' ) ) print ( person ) print ( asjson ( person )) Person( 'John', age=40, music=Music(name='Imagine') ) '{\"name\":\"John\",\"age\":40}'","title":"dataclassjson"},{"location":"#dataclassjson","text":"Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassjson Source Code : https://github.com/dutradda/dataclassjson","title":"dataclassjson"},{"location":"#key-features","text":"Full compatibility with all functions of dataclasses module Optional input typecasting Direct json serialization with orjson (don't convert to dict before serialization) Supports custom serialization","title":"Key Features"},{"location":"#requirements","text":"Python 3.7+ orjson for json serialization","title":"Requirements"},{"location":"#instalation","text":"$ pip install dataclassjson[orjson]","title":"Instalation"},{"location":"#basic-example","text":"from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Basic example"},{"location":"#example-for-disable-typecasting","text":"from dataclassjson import asdict , dataclass @dataclass class Music : __cast_input__ = None name : str @dataclass class Person : __cast_input__ = None name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = b 'Imagine' ) ) # if we use the 'asjson' function will raise error for invalid bytes type print ( asdict ( person )) { 'name':b'John', 'age':'40', 'music':{ 'name':b'Imagine' } }","title":"Example for disable typecasting"},{"location":"#example-for-choose-fields-to-typecasting","text":"from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __cast_input__ = ( 'name' ,) name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":\"40\",\"music\":{\"name\":\"Imagine\"}}'","title":"Example for choose fields to typecasting"},{"location":"#example-for-omit-output-fields","text":"from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : __omit_output__ = ( 'music' ,) name : str age : int music : Music person = Person ( 'John' , age = 40 , music = dict ( name = 'Imagine' ) ) print ( person ) print ( asjson ( person )) Person( 'John', age=40, music=Music(name='Imagine') ) '{\"name\":\"John\",\"age\":40}'","title":"Example for omit output fields"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"features/","text":"dataclassjson features dataclassjson gives you the following: Same interface as dataclasses module, with extensions","title":"Features"},{"location":"features/#dataclassjson-features","text":"dataclassjson gives you the following:","title":"dataclassjson features"},{"location":"features/#same-interface-as-dataclasses-module-with-extensions","text":"","title":"Same interface as dataclasses module, with extensions"},{"location":"src/tutorial/custom-data-types/","text":"","title":"Custom data types"},{"location":"src/tutorial/intro/","text":"Tutorial - User Guide - Intro Getting Started Installs $ pip install dataclassjson[orjson] Starts coding from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Tutorial - User Guide - Intro"},{"location":"src/tutorial/intro/#tutorial-user-guide-intro","text":"","title":"Tutorial - User Guide - Intro"},{"location":"src/tutorial/intro/#getting-started","text":"","title":"Getting Started"},{"location":"src/tutorial/intro/#installs","text":"$ pip install dataclassjson[orjson]","title":"Installs"},{"location":"src/tutorial/intro/#starts-coding","text":"from dataclassjson import asjson , dataclass @dataclass class Music : name : str @dataclass class Person : name : str age : int music : Music person = Person ( b 'John' , age = '40' , music = dict ( name = 'Imagine' ) ) print ( asjson ( person )) '{\"name\":\"John\",\"age\":40,\"music\":{\"name\":\"Imagine\"}}'","title":"Starts coding"}]}