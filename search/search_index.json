{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dataclassesjson Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassesjson Source Code : https://github.com/dutradda/dataclassesjson Key Features Full compatibility with dataclasses module* Deserialize values from dict Deserialize values from bytes* Deserialization/serialization of choosen fields Dict serialization* Direct json serialization with orjson (don't convert to dict before serialization) Optional validation according with the json-schema specification* * feature in development. Requirements Python 3.7+ orjson for json serialization (optional, but recommended) Instalation $ pip install dataclassesjson[orjson] Basic example from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}' Example for choose fields to deserialize from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson ( deserialize_fields = ( 'name' , 'age' )) @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[{'name': 'Imagine'}]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}' Example for choose fields to serialize from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson ( serialize_fields = ( 'name' , 'age' )) @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = 'John' , age = 40 , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"age\":40,\"name\":\"John\"}' Wins Pydantic Benchmark dataclassesjson is 2.5 times faster than pydantic on it's benchmark","title":"dataclassesjson"},{"location":"#dataclassesjson","text":"Interoperates @dataclass with json objects Documentation : https://dutradda.github.io/dataclassesjson Source Code : https://github.com/dutradda/dataclassesjson","title":"dataclassesjson"},{"location":"#key-features","text":"Full compatibility with dataclasses module* Deserialize values from dict Deserialize values from bytes* Deserialization/serialization of choosen fields Dict serialization* Direct json serialization with orjson (don't convert to dict before serialization) Optional validation according with the json-schema specification* * feature in development.","title":"Key Features"},{"location":"#requirements","text":"Python 3.7+ orjson for json serialization (optional, but recommended)","title":"Requirements"},{"location":"#instalation","text":"$ pip install dataclassesjson[orjson]","title":"Instalation"},{"location":"#basic-example","text":"from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}'","title":"Basic example"},{"location":"#example-for-choose-fields-to-deserialize","text":"from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson ( deserialize_fields = ( 'name' , 'age' )) @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[{'name': 'Imagine'}]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}'","title":"Example for choose fields to deserialize"},{"location":"#example-for-choose-fields-to-serialize","text":"from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson ( serialize_fields = ( 'name' , 'age' )) @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = 'John' , age = 40 , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"age\":40,\"name\":\"John\"}'","title":"Example for choose fields to serialize"},{"location":"#wins-pydantic-benchmark","text":"dataclassesjson is 2.5 times faster than pydantic on it's benchmark","title":"Wins Pydantic Benchmark"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"features/","text":"dataclassesjson features dataclassesjson gives you the following: Same interface as dataclasses module, plus extensions","title":"Features"},{"location":"features/#dataclassesjson-features","text":"dataclassesjson gives you the following:","title":"dataclassesjson features"},{"location":"features/#same-interface-as-dataclasses-module-plus-extensions","text":"","title":"Same interface as dataclasses module, plus extensions"},{"location":"json/","text":"JavaScript Object Notation Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp JSON Schema Official Documentation: - https://json-schema.org","title":"Json intro"},{"location":"json/#javascript-object-notation","text":"Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp","title":"JavaScript Object Notation"},{"location":"json/#json-schema","text":"Official Documentation: - https://json-schema.org","title":"JSON Schema"},{"location":"python-dataclass/","text":"Python 3.7 dataclasses module Official Documentation: - https://docs.python.org/3/library/dataclasses.html Dataclass Benchmark Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Python dataclass intro"},{"location":"python-dataclass/#python-37-dataclasses-module","text":"Official Documentation: - https://docs.python.org/3/library/dataclasses.html","title":"Python 3.7 dataclasses module"},{"location":"python-dataclass/#dataclass-benchmark","text":"Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Dataclass Benchmark"},{"location":"tutorial/custom-data-types/","text":"","title":"Custom Data Types"},{"location":"tutorial/intro/","text":"Tutorial - User Guide - Intro Getting Started Installs $ pip install dataclassesjson[orjson] Starts coding from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}'","title":"Introduciton"},{"location":"tutorial/intro/#tutorial-user-guide-intro","text":"","title":"Tutorial - User Guide - Intro"},{"location":"tutorial/intro/#getting-started","text":"","title":"Getting Started"},{"location":"tutorial/intro/#installs","text":"$ pip install dataclassesjson[orjson]","title":"Installs"},{"location":"tutorial/intro/#starts-coding","text":"from dataclasses import dataclass from typing import List from dataclassesjson import asdataclass , asjson , dataclassjson @dataclass class Music : name : str @dataclassjson @dataclass class Person : name : str age : int musics : List [ Music ] jsondict = dict ( name = b 'John' , age = '40' , musics = [ dict ( name = 'Imagine' )]) person = asdataclass ( jsondict , Person ) print ( person ) print ( asjson ( person )) Person(name='John', age=40, musics=[Music(name='Imagine')]) b'{\"name\":\"John\",\"age\":40,\"musics\":[{\"name\":\"Imagine\"}]}'","title":"Starts coding"}]}